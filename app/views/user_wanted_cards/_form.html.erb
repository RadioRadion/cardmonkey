<div class="bg-white shadow-xl rounded-lg w-full max-w-2xl mx-auto">
  <div class="p-4 sm:p-6">
    <%= simple_form_for(@form,
                      as: :user_wanted_card,
                      url: form_url,
                      method: editing ? :patch : :post,
                      html: {
                        class: "w-full",
                        data: {
                          controller: "autocomplete",
                          autocomplete_type_value: "wanted"
                        }
                      }) do |f| %>
      <%= f.input :card_id, as: :hidden %>
      <%= f.input :scryfall_id, as: :hidden,
                  input_html: {
                    data: { autocomplete_target: "scryfallOracleId" }
                  } %>

      <% if @form.errors.any? %>
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-6" role="alert">
          <strong class="font-bold"><%= t('user_wanted_cards.form.errors') %></strong>
          <ul class="mt-2 list-disc pl-5">
            <% @form.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>

      <div class="space-y-6">
        <% unless editing %>
          <div>
            <div class="flex items-center mb-2">
              <svg class="h-5 w-5 text-gray-400 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
              </svg>
              <label class="block text-sm font-medium text-gray-700">
                <%= t('user_wanted_cards.form.card_name') %>
              </label>
            </div>

            <div class="relative">
              <%= f.input :card_name,
                          label: false,
                          wrapper_html: { class: "relative" },
                          placeholder: "Rechercher une carte...",
                          input_html: { 
                            class: "block w-full px-6 py-4 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 transition duration-150 ease-in-out focus:ring-2 focus:ring-indigo-500 focus:border-transparent sm:text-sm",
                            data: {
                              autocomplete_target: "input",
                              action: "keyup->autocomplete#search"
                            }
                          } %>

              <!-- Indicateur de chargement -->
              <div class="absolute inset-y-0 right-0 pr-4 flex items-center pointer-events-none hidden" data-autocomplete-target="loader">
                <svg class="animate-spin h-5 w-5 text-indigo-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              </div>
            </div>

            <div id="card-suggestions"
                 data-autocomplete-target="suggestions"
                 class="hidden mt-2 bg-white border border-gray-200 rounded-lg shadow-lg max-h-96 overflow-y-auto absolute w-full z-10">
            </div>
          </div>
        <% end %>

        <div data-autocomplete-target="formFields" class="<%= editing ? '' : 'hidden' %> space-y-6">
          <div>
            <label for="card_version_id" class="block text-sm font-medium text-gray-700 mb-2">
              <%= t('user_wanted_cards.form.extension') %>
            </label>
            <%= f.input :card_version_id,
                  label: false,
                  collection: editing ? @versions.map { |v| [v.extension.name, v.id, { 'data-icon-uri': v.extension.icon_uri }] } : [],
                  include_blank: t('user_wanted_cards.form.any_extension'),
                  selected: @form.card_version_id,
                  input_html: { 
                    class: "block w-full px-6 py-4 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 transition duration-150 ease-in-out focus:ring-2 focus:ring-indigo-500 focus:border-transparent sm:text-sm",
                    data: { 
                      autocomplete_target: "extension"
                    }
                  } %>
          </div>

          <%= f.input :min_condition,
                      collection: condition_options_for_select(:user_wanted_card),
                      include_blank: false,
                      label_html: { class: "block text-sm font-medium text-gray-700 mb-2" },
                      input_html: {
                        class: "block w-full px-6 py-4 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 transition duration-150 ease-in-out focus:ring-2 focus:ring-indigo-500 focus:border-transparent sm:text-sm"
                      } %>

          <%= f.input :language,
                      collection: [["", t('user_wanted_cards.form.any_language')]] + UserCard.languages.map { |name, code| ["#{t("cards.languages.flags.#{code}")} #{t("activerecord.enums.user_card.language.#{name}")}", code] },
                      include_blank: false,
                      label_html: { class: "block text-sm font-medium text-gray-700 mb-2" },
                      input_html: {
                        class: "block w-full px-6 py-4 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 transition duration-150 ease-in-out focus:ring-2 focus:ring-indigo-500 focus:border-transparent sm:text-sm"
                      } %>

          <div class="flex items-center bg-gray-50 rounded-lg p-4">
            <%= f.input :foil,
                        as: :boolean,
                        wrapper_html: { class: "flex items-center m-0" },
                        label_html: { class: "ml-2 text-sm font-medium text-gray-700" },
                        input_html: {
                          class: "h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded transition duration-150 ease-in-out"
                        } %>
          </div>

          <%= f.input :quantity,
                      as: :integer,
                      label_html: { class: "block text-sm font-medium text-gray-700 mb-2" },
                      input_html: {
                        min: 1,
                        class: "block w-full px-6 py-4 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 transition duration-150 ease-in-out focus:ring-2 focus:ring-indigo-500 focus:border-transparent sm:text-sm"
                      } %>

          <button type="submit"
                  class="w-full flex justify-center py-4 px-6 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            <%= editing ? t('user_wanted_cards.form.save_changes') : t('user_wanted_cards.form.add_card') %>
          </button>
        </div>
      </div>
    <% end %>
  </div>
</div>

<% content_for :head do %>
  <style>
    @keyframes fadeIn {
      from { opacity: 0; transform: scale(0.95); }
      to { opacity: 1; transform: scale(1); }
    }

    @keyframes slideDown {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .animate-fade-in {
      animation: fadeIn 0.2s ease-out forwards;
    }

    .animate-slide-down {
      animation: slideDown 0.3s ease-out forwards;
    }
  </style>
<% end %>

<% if editing %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const controller = document.querySelector('[data-controller="autocomplete"]').__stimulusController
      if (controller.hasExtensionTarget) {
        controller.styleExtensionSelect(controller.extensionTarget)
      }
    })
  </script>
<% end %>
